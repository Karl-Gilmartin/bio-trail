generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model University {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  latitude      Float
  longitude     Float
  trails        Trail[]
  birdSightings BirdSighting[]
}

model Trail {
  id           Int        @id @default(autoincrement())
  name         String
  universityId Int
  geojson      Json
  markers      Marker[]
  description  String
  university   University @relation(fields: [universityId], references: [id], onDelete: Cascade)
}

model Marker {
  id          Int      @id @default(autoincrement())
  visibleId   Int?
  trailId     Int
  name        String
  description String
  latitude    Float
  longitude   Float
  images      String[]  // Store multiple image URLs
  videos      String[]  // Store multiple video URLs
  createdAt   DateTime @default(now())

  trail Trail @relation(fields: [trailId], references: [id], onDelete: Cascade)
}

model Bird {
  id          Int            @id @default(autoincrement())
  name        String         @unique
  sightings   BirdSighting[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model BirdSighting {
  id          Int      @id @default(autoincrement())
  birdId      Int
  bird        Bird     @relation(fields: [birdId], references: [id], onDelete: Cascade)
  universityId Int
  university  University @relation(fields: [universityId], references: [id], onDelete: Cascade)
  latitude    Float
  longitude   Float
  imageUrl    String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([birdId])
  @@index([universityId])
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogPost {
  id        Int      @id @default(autoincrement())
  title     String
  summary   String
  content   String?
  imageName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CreationPin {
  id        Int      @id @default(autoincrement())
  pin       String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  expiresAt DateTime
}
